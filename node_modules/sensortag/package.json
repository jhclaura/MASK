{
  "name": "sensortag",
  "version": "0.1.11",
  "description": "node.js lib for the TI SensorTag",
  "main": "index.js",
  "scripts": {
    "test": "jshint *.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sandeepmistry/node-sensortag"
  },
  "keywords": [
    "TI",
    "SensorTag"
  ],
  "author": {
    "name": "Sandeep Mistry"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "noble": "~0.3.5"
  },
  "devDependencies": {
    "async": "~0.2.7",
    "jshint": "~1.1.0"
  },
  "readme": "# node-sensortag\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/sandeepmistry/node-sensortag?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\nnode.js lib for the TI SensorTag\n\n## Install\n\n```sh\nnpm install sensortag\n```\n\n## Usage\n\n```javascript\nvar SensorTag = require('sensortag');\n```\n\n### Discover\n\n```javascript\nSensorTag.discover(callback(sensorTag)[, uuid]);\n```\n\nOptional SensorTag ```uuid``` to scan for, obtained from previous discover ```sensorTag.uuid```.\nThe ```uuid``` per SensorTag may not be the same across machines. \n\n### Connect\n\n```javascript\nsensorTag.connect(callback);\n```\n\n### Disconnect\n\n```javascript\nsensorTag.disconnect(callback);\n```\n\n### Discover Services and Characteristics\n\n```javascript\nsensorTag.discoverServicesAndCharacteristics(callback);\n```\n\n### Device Info\n\n```javascript\nsensorTag.readDeviceName(callback(deviceName)); // does not work on OS X 10.10\n\nsensorTag.readSystemId(callback(systemId));\n\nsensorTag.readSerialNumber(callback(serialNumber));\n\nsensorTag.readFirmwareRevision(callback(firmwareRevision));\n\nsensorTag.readHardwareRevision(callback(hardwareRevision));\n\nsensorTag.readSoftwareRevision(callback(softwareRevision));\n\nsensorTag.readManufacturerName(callback(manufacturerName));\n```\n\n### IR Temperature Sensor\n\n#### Enable/disable\n\n```javascript\nsensorTag.enableIrTemperature(callback);\n\nsensorTag.disableIrTemperature(callback);\n\nsensorTag.setIrTemperaturePeriod(period, callback); // period min 300ms, default period is 1000 ms\n```\n\n#### Read\n\n```javascript\nsensorTag.readIrTemperature(callback(objectTemperature, ambientTemperature));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyIrTemperature(callback);\n\nsensorTag.unnotifyIrTemperature(callback);\n\nsensorTag.on('irTemperatureChange', callback(objectTemperature, ambientTemperature));\n```\n\n### Accelerometer\n\n#### Enable/disable/configure\n\n```javascript\nsensorTag.enableAccelerometer(callback);\n\nsensorTag.disableAccelerometer(callback);\n\nsensorTag.setAccelerometerPeriod(period, callback); // period 1 - 2550 ms, default period is 2000 ms\n```\n\n#### Read\n\n```javascript\nsensorTag.readAccelerometer(callback(x, y, z));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyAccelerometer(callback);\n\nsensorTag.unnotifyAccelerometer(callback);\n\nsensorTag.on('accelerometerChange', callback(x, y, z));\n```\n\n### Humidity Sensor\n\n#### Enable/disable\n\n```javascript\nsensorTag.enableHumidity(callback);\n\nsensorTag.disableHumidity(callback);\n```\n\n#### Read\n\n```javascript\nsensorTag.readHumidity(callback(temperature, humidity));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyHumidity(callback);\n\nsensorTag.unnotifyHumidity(callback);\n\nsensorTag.on('humidityChange', callback(temperature, humidity));\n```\n\n### Magnetometer\n\n#### Enable/disable\n\n```javascript\nsensorTag.enableMagnetometer(callback);\n\nsensorTag.disableMagnetometer(callback);\n\nsensorTag.setMagnetometerPeriod(period, callback); // period 1 - 2550 ms, default period is 2000 ms\n```\n\n#### Read\n\n```javascript\nsensorTag.readMagnetometer(callback(x, y, z));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyMagnetometer(callback);\n\nsensorTag.unnotifyMagnetometer(callback);\n\nsensorTag.on('magnetometerChange', callback(x, y, z));\n```\n\n### Barometric Pressure Sensor\n\n#### Enable/disable\n\n```javascript\nsensorTag.enableBarometricPressure(callback);\n\nsensorTag.disableBarometricPressure(callback);\n```\n\n#### Read\n\n```javascript\nsensorTag.readBarometricPressure(callback(pressure));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyBarometricPressure(callback);\n\nsensorTag.unnotifyBarometricPressure(callback);\n\nsensorTag.on('barometricPressureChange', callback(pressure));\n```\n\n### Gyroscope\n\n#### Enable/disable/configure\n\n```javascript\nsensorTag.enableGyroscope(callback);\n\nsensorTag.disableGyroscope(callback);\n\nsensorTag.setGyroscopePeriod(period, callback); // period 100 - 2550 ms, default period is 1000 ms\n```\n\n#### Read\n\n```javascript\nsensorTag.readGyroscope(callback(x, y, z));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyGyroscope(callback);\n\nsensorTag.unnotifyGyroscope(callback);\n\nsensorTag.on('gyroscopeChange', callback(x, y, z));\n```\n\n### Simple Key\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifySimpleKey(callback);\n\nsensorTag.unnotifySimpleKey(callback);\n\nsensorTag.on('simpleKeyChange', callback(left, right));\n```\n    \n[![Analytics](https://ga-beacon.appspot.com/UA-56089547-1/sandeepmistry/node-sensortag?pixel)](https://github.com/igrigorik/ga-beacon)\n",
  "bugs": {
    "url": "https://github.com/sandeepmistry/node-sensortag/issues"
  },
  "homepage": "https://github.com/sandeepmistry/node-sensortag",
  "_id": "sensortag@0.1.11",
  "_from": "sensortag@"
}
